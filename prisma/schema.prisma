datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model Adm {
  id         String   @id @default(cuid())
  email      String   @unique
  name       String?
  cpf        String   @unique
  password   String
  firstLogin Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Colaborador {
  id              String      @id @default(cuid())
  nome            String
  idade           Int
  rua             String      @default("")
  numeroCasa      String      @default("")
  bairro          String      @default("")
  complemento     String      @default("")
  nomeMae         String      @default("")
  nomePai         String      @default("")
  telefone        String
  email           String      @unique
  profissao       String      @default("")
  escolaridade    String      @default("")
  redesSociais    String
  cep             String      @default("")
  latitude        String?     @default("")
  longitude       String?     @default("")
  dataNascimento  DateTime
  rg              String      @unique
  orgaoExpedidor  String      @default("")
  cpf             String      @unique
  tituloEleitor   String      @default("")
  zona            String      @default("")
  secao           String      @default("")
  recebeBeneficio Boolean     @default(false)
  faixaSalarial   Int         @default(0)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  deletedAt       DateTime?
  password        String?     @default("")
  firstLogin      Boolean     @default(true)
  roleId          String?
  role            Role?       @relation(fields: [roleId], references: [id])
  Recrutador      Recrutador? @relation(fields: [recrutadorId], references: [id])
  recrutadorId    String?
  liderEquipe     Equipe?     @relation(name: "TeamLeader", fields: [liderId], references: [id])
  membroEquipe    Equipe?     @relation(name: "TeamMember", fields: [equipeId], references: [id])
  liderId         String?     @unique
  equipeId        String?
}

model PreCadastro {
  id        String   @id @default(cuid())
  nome      String
  numero    String
  createdAt DateTime @default(now())
}

model Role {
  id          String        @id @default(uuid())
  name        String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Colaborador Colaborador[]
}

model Recrutador {
  id           String        @id @unique
  recrutadorId String?
  liderId      String?
  admId        String?
  colaborador  Colaborador[]
  createdAt    DateTime      @default(now())
}

model Bairro {
  id        String   @id @default(cuid())
  nome      String   @unique
  zona      String
  createdAt DateTime @default(now())
  Equipes   Equipe[]
}

model Equipe {
  id        String        @id @default(cuid())
  nome      String        @unique
  bairro    Bairro        @relation(fields: [bairroId], references: [id])
  bairroId  String
  createdAt DateTime      @default(now())
  lider     Colaborador?  @relation(name: "TeamLeader")
  membros   Colaborador[] @relation(name: "TeamMember")
}
